{"version":3,"sources":["utils/api.js","utils/utils.js","images/logo.svg","components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","reportWebVitals.js","index.js"],"names":["api","options","this","_cardsUrl","baseUrl","_userUrl","_likesUrl","_headers","headers","result","ok","json","Promise","reject","status","fetch","then","_checkResponse","name","about","method","body","JSON","stringify","link","cardId","avatar","authorization","Header","className","src","logo","alt","CurrentUserContext","React","createContext","Card","card","onCardClick","onCardLike","onCardDelete","currentUser","useContext","isOwn","owner","_id","isLiked","likes","some","i","type","onClick","length","Main","onEditAvatar","onEditProfile","onAddPlace","cards","map","item","Footer","Date","getFullYear","PopupWithForm","title","isOpen","buttonText","onClose","children","onSubmit","noValidate","ImagePopup","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","event","preventDefault","placeholder","id","minLength","maxLength","value","onChange","target","required","EditAvatarPopup","onUpdateAvatar","avatarSrc","useRef","current","ref","AddPlacePopup","setLink","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isImagePopupOpen","setIsImagePopupOpen","selectedCard","setSelectedCard","setCurrentUser","setCards","all","getUserInfo","getInitialCards","results","user","catch","error","console","log","closeAllPopups","Provider","dislike","newCard","state","c","like","deleteCard","cardsAfterDelite","filter","userData","updateUserInfo","addCard","updateAvatar","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","process","document","querySelector"],"mappings":"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","file":"static/js/main.bbff429f.chunk.js","sourcesContent":["import { options } from './utils.js';\r\n\r\nclass Api {\r\n\r\n  constructor(options) {\r\n    this._cardsUrl = options.baseUrl + '/cards';\r\n    this._userUrl = options.baseUrl + '/users/me';\r\n    this._likesUrl = options.baseUrl + '/cards/likes/';\r\n    this._headers = options.headers;\r\n  }\r\n\r\n  _checkResponse(result) { // Проверка промиса\r\n    if (result.ok) {\r\n      return result.json();\r\n    }\r\n    return Promise.reject(`Ошибка: ${result.status}`);\r\n  }\r\n\r\n  getUserInfo() { // Загрузка информации о пользователе с сервера\r\n    return fetch(this._userUrl, {\r\n      headers: this._headers\r\n    })\r\n      .then(this._checkResponse);\r\n  }\r\n\r\n  getInitialCards() { // Загрузка карточек с сервера\r\n    return fetch(this._cardsUrl, {\r\n      headers: this._headers\r\n    })\r\n      .then(this._checkResponse);\r\n  }\r\n\r\n  updateUserInfo(name, about) { // Редактирование профиля\r\n    return fetch(this._userUrl, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        about\r\n      })\r\n    })\r\n      .then(this._checkResponse);\r\n  }\r\n\r\n  addCard(name, link) { // Добавление новой карточки\r\n    return fetch(this._cardsUrl, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        link\r\n      })\r\n    })\r\n      .then(this._checkResponse);\r\n  }\r\n\r\n  deleteCard(cardId) { // Удаление карточки\r\n    return fetch(this._cardsUrl + '/' + cardId, {\r\n      method: \"DELETE\",\r\n      headers: this._headers\r\n    })\r\n      .then(this._checkResponse);\r\n  }\r\n\r\n  like(cardId) { // Постановка лайка\r\n    return fetch(this._likesUrl + cardId, {\r\n      method: \"PUT\",\r\n      headers: this._headers\r\n    })\r\n      .then(this._checkResponse);\r\n  }\r\n\r\n  dislike(cardId) { // Снятие лайка\r\n    return fetch(this._likesUrl + cardId, {\r\n      method: \"DELETE\",\r\n      headers: this._headers\r\n    })\r\n      .then(this._checkResponse);\r\n  }\r\n\r\n  updateAvatar(avatar) { // Обновление аватара пользователя\r\n    return fetch(this._userUrl + '/avatar', {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar\r\n      })\r\n    })\r\n      .then(this._checkResponse);\r\n  }\r\n}\r\n\r\nconst api = new Api(options);\r\n\r\nexport default api;\r\n","export const config = {\r\n  formSelector: '.popup__form',\r\n  inputSelector: '.popup__input',\r\n  submitButtonSelector: '.popup__button',\r\n  inactiveButtonClass: 'popup__button_disabled',\r\n  inputErrorClass: 'popup__input_type_error',\r\n  errorClass: 'popup__error_visible'\r\n};\r\n\r\nexport const options = {\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-25',\r\n  headers: {\r\n    authorization: 'bd192512-52fc-48cd-9611-18a277475c8c',\r\n    'Content-Type': 'application/json'\r\n  }\r\n};\r\n","export default __webpack_public_path__ + \"static/media/logo.5f3664ca.svg\";","import React from 'react';\r\nimport logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n  \r\n  return (\r\n    <header className=\"header page__header\">\r\n      <img src={logo} alt=\"Место\" className=\"header__logo\" />\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\n// Контекст для данных пользователя //\r\n\r\nexport const CurrentUserContext = React.createContext();\r\nexport const currentUser = {};\r\n","import React from 'react';\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\n\r\nfunction Card({ card, onCardClick, onCardLike, onCardDelete }) {\r\n  \r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const isOwn = card.owner._id === currentUser._id;\r\n  const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n  \r\n  const handleClick = () => { // Обработчик нажатия на картчку\r\n    onCardClick(card);\r\n  };\r\n\r\n  const handleLikeClick = () => { // Обработчик лайка картчки\r\n    onCardLike(card);\r\n  };\r\n\r\n  const handleDeleteClick = () => { // Обработчик удаления картчки\r\n    onCardDelete(card);\r\n  };\r\n\r\n  return (\r\n    <li className=\"element\">\r\n      <button className=\"button button_type_image\" type=\"button\" onClick={handleClick}></button>\r\n      {isOwn && <button className=\"button button_type_delete\" aria-label=\"Удалить\" type=\"button\" onClick={handleDeleteClick}></button>}\r\n      <img className=\"element__image\" src={card.link} alt={card.name} />\r\n      <div className=\"element__group\">\r\n        <h2 className=\"element__title\">{card.name}</h2>\r\n        <div className=\"element__like-group\">\r\n          <button className={`button button_type_like ${isLiked && \"button_active\"}`} aria-label=\"Лайк\" type=\"button\" onClick={handleLikeClick}></button>\r\n          <p className=\"element__likes\">{card.likes.length}</p>\r\n        </div>\r\n      </div>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\n\r\nfunction Main({ onEditAvatar, onEditProfile, onAddPlace, onCardClick, cards, onCardLike, onCardDelete }) {\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n\r\n  return (\r\n    <main className=\"content\">\r\n      <section className=\"profile\">\r\n        <div className=\"profile__container\">\r\n          <img alt=\"Аватар профиля\" className=\"profile__avatar\" src={currentUser.avatar}/>\r\n          <button className=\"profile__avatar-button\" onClick={onEditAvatar}></button>\r\n          <div className=\"profile__info\">\r\n            <h1 className=\"profile__name\">{currentUser.name}</h1>\r\n            <p className=\"profile__status\">{currentUser.about}</p>\r\n            <button className=\"button button_type_edit\" aria-label=\"Редактировать профиль\" type=\"button\" onClick={onEditProfile}></button>\r\n          </div>\r\n        </div>\r\n        <button className=\"button button_type_add\" aria-label=\"Добавить картинку\" type=\"button\" onClick={onAddPlace}></button>\r\n      </section>\r\n      <section className=\"content__section\">\r\n        <ul className=\"elements\">\r\n          {cards.map((item) => (\r\n            <Card card={item} onCardClick={onCardClick} onCardLike={onCardLike} onCardDelete={onCardDelete} key={item._id}/>\r\n          ))}\r\n        </ul>\r\n      </section>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\n\r\nfunction Footer() {\r\n  \r\n  return (\r\n    <footer className=\"footer page__footer\">\r\n      <p className=\"footer__copyright\">&copy; {new Date().getFullYear()} Mesto Russia</p>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nfunction PopupWithForm({ title, name, isOpen, buttonText, onClose, children, onSubmit }) {\r\n  \r\n  return (\r\n    <div className={`popup popup_type_${name} ${isOpen && \"popup_opened\"}`} >\r\n      <div className=\"popup__content dialog-window\">\r\n        <button className=\"button button_type_close\" aria-label=\"Закрыть\" type=\"button\" onClick={onClose}></button>\r\n        <h2 className=\"popup__title\">{title}</h2>\r\n        <form className=\"popup__form\" name=\"avatar\" onSubmit={onSubmit} noValidate>\r\n          <fieldset className=\"popup__set\">\r\n            {children}\r\n            <button className=\"button popup__button\" aria-label={buttonText} type=\"submit\">Сохранить</button>\r\n          </fieldset>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PopupWithForm;\r\n","import React from 'react';\r\n\r\nfunction ImagePopup({ card, name, isOpen, onClose }) {\r\n  \r\n  return(\r\n    <div className={`popup popup_type_${name} ${isOpen && \"popup_opened\"}`} >\r\n      <figure className=\"popup__figure dialog-window\">\r\n        <button className=\"button button_type_close\" aria-label=\"Закрыть\" type=\"button\" onClick={onClose}></button>\r\n        <img className=\"popup__image\" src={card.link} alt={card.name}/>\r\n        <figcaption className=\"popup__caption\">{card.name}</figcaption>\r\n      </figure>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ImagePopup\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\n\r\nfunction EditProfilePopup({ isOpen, onClose, onUpdateUser }) {\r\n\r\n  const currentUser = React.useContext(CurrentUserContext);\r\n  const [name, setName] = React.useState(currentUser.name);\r\n  const [description, setDescription] = React.useState(currentUser.about);\r\n\r\n  React.useEffect(() => {\r\n    setName(currentUser.name);\r\n    setDescription(currentUser.about);\r\n  }, [currentUser]);\r\n\r\n  const handleInputName = (event) => { // Обработчик поля ввода имени\r\n    setName(event.target.value)\r\n  };\r\n\r\n  const handleInputStatus = (event) => { // Обработчик поля ввода статуса\r\n    setDescription(event.target.value)\r\n  };\r\n  \r\n  const handleSubmit = (event) => { // Обработчик сабмита формы\r\n    event.preventDefault();\r\n    onUpdateUser({\r\n      name,\r\n      about: description,\r\n    });\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm title=\"Редактировать профиль\" name=\"profile\" isOpen={isOpen} buttonText=\"Сохранить\" onClose={onClose} onSubmit={handleSubmit}>\r\n      <input className=\"popup__input popup__input_field_name\" type=\"text\" name=\"name\" placeholder=\"Имя\" id=\"name-input\" minLength=\"2\" maxLength=\"40\" value={name || ''} onChange={handleInputName} required />\r\n      <span className=\"popup__error name-input-error\"></span>\r\n      <input className=\"popup__input popup__input_field_status\" type=\"text\" name=\"status\" placeholder=\"Статус\" id=\"status-input\" minLength=\"2\" maxLength=\"200\" value={description || ''} onChange={handleInputStatus} required />\r\n      <span className=\"popup__error status-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default EditProfilePopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({ isOpen, onClose, onUpdateAvatar }) {\r\n\r\n  const avatarSrc = React.useRef();\r\n\r\n  React.useEffect(() => {\r\n    avatarSrc.current.value = '';\r\n  }, [isOpen]);\r\n\r\n  const handleSubmit = (event) => { // Обработчик сабмита формы\r\n    event.preventDefault();\r\n    onUpdateAvatar(avatarSrc.current.value);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm title=\"Обновить аватар\" name=\"avatar\" isOpen={isOpen} buttonText=\"Сохранить\" onClose={onClose} onSubmit={handleSubmit}>\r\n      <input ref={avatarSrc} className=\"popup__input popup__input_field_avatar\" type=\"url\" name=\"avatar\" placeholder=\"Ссылка на картинку\" id=\"avatar-input\" required />\r\n      <span className=\"popup__error avatar-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n   \r\n}\r\n\r\nexport default EditAvatarPopup;\r\n","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({ isOpen, onClose, onAddPlace }) {\r\n\r\n  const [name, setName] = React.useState('');\r\n  const [link, setLink] = React.useState('');\r\n\r\n  React.useEffect(() => {\r\n    setName('');\r\n    setLink('')\r\n  }, [isOpen]);\r\n\r\n  const handleInputName = (event) => { // Обработчик поля ввода названия\r\n    setName(event.target.value)\r\n  };\r\n\r\n  const handleInputLink = (event) => { // Обработчик поля ввода ссылки\r\n    setLink(event.target.value)\r\n  };\r\n  \r\n  const handleSubmit = (event) => { // Обработчик сабмита формы\r\n    event.preventDefault();\r\n    onAddPlace(name, link);\r\n  }\r\n\r\n  return (\r\n    <PopupWithForm title=\"Новое место\" name=\"element\" isOpen={isOpen} buttonText=\"Сохранить\" onClose={onClose} onSubmit={handleSubmit}>\r\n      <input className=\"popup__input popup__input_field_title\" type=\"text\" name=\"title\" placeholder=\"Название\" id=\"title-input\" minLength=\"2\" maxLength=\"30\" onChange={handleInputName} required />\r\n      <span className=\"popup__error title-input-error\"></span>\r\n      <input className=\"popup__input popup__input_field_image\" type=\"url\" name=\"image\" placeholder=\"Ссылка на картинку\" id=\"image-input\" onChange={handleInputLink} required />\r\n      <span className=\"popup__error image-input-error\"></span>\r\n    </PopupWithForm>\r\n  );\r\n}\r\n\r\nexport default AddPlacePopup;\r\n","import React from 'react';\r\nimport api from '../utils/api.js';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport { CurrentUserContext } from \"../contexts/CurrentUserContext.js\";\r\n\r\nfunction App() {\r\n\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = React.useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = React.useState(false);\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = React.useState(false);\r\n  const [isImagePopupOpen, setIsImagePopupOpen] = React.useState(false);\r\n  const [selectedCard, setSelectedCard] = React.useState({});\r\n  const [currentUser, setCurrentUser] = React.useState({});\r\n  const [cards, setCards] = React.useState([]);\r\n  \r\n  React.useEffect(() => { // Запросы к серверу за данными пользователя и карточек\r\n    Promise.all([api.getUserInfo(), api.getInitialCards()])\r\n      .then((results) => {\r\n        const [user, cards] = results;\r\n        setCurrentUser(user);\r\n        setCards(cards);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  }, []);\r\n\r\n  const handleEditAvatarClick = () => { // Обработчик кнопки редактирования аватара\r\n    setIsEditAvatarPopupOpen(true);\r\n  };\r\n\r\n  const handleUpdateAvatar = (avatar) => { // Обработчик обнавления аватара пользователя\r\n    api.updateAvatar(avatar)\r\n      .then((result) => {\r\n        setCurrentUser(result);\r\n        closeAllPopups();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleEditProfileClick = () => { // Обработчик кнопки редактирования профиля\r\n    setIsEditProfilePopupOpen(true);\r\n  };\r\n\r\n  const handleUpdateUser = (userData) => { // Обработчик обнавления данных пользователя\r\n    api.updateUserInfo(userData.name, userData.about)\r\n      .then((result) => {\r\n        setCurrentUser(result);\r\n        closeAllPopups();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleAddPlaceClick = () => { // Обработчик кнопки добавления карточки\r\n    setIsAddPlacePopupOpen(true);\r\n  };\r\n\r\n  const handleAddPlace = (name, link) => { // Обработчик добавления карточки\r\n    api.addCard(name, link)\r\n      .then((result) => {\r\n        setCards([result, ...cards]);\r\n        closeAllPopups();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleCardClick = (card) => { // Обработчик нажатия на карточку\r\n    setSelectedCard(card);\r\n    setIsImagePopupOpen(true);\r\n  };\r\n\r\n  function handleCardLike(card) { // Обработчик лайка картчки\r\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n    if (isLiked) {\r\n      api.dislike(card._id).then((newCard) => {\r\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n      });\r\n    } else {\r\n      api.like(card._id).then((newCard) => {\r\n        setCards((state) => state.map((c) => c._id === card._id ? newCard : c));\r\n      });\r\n    }\r\n  }\r\n\r\n  function handleCardDelete(card) { // Обработчик удаления картчки\r\n    api.deleteCard(card._id).then(() => {\r\n      const cardsAfterDelite = cards.filter((c) => c._id !== card._id);\r\n      setCards(cardsAfterDelite);\r\n    });\r\n  }\r\n\r\n  const closeAllPopups = () => { // Закрытие всех попапов\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsImagePopupOpen(false);\r\n    setSelectedCard({});\r\n  };\r\n\r\n  return (\r\n    <CurrentUserContext.Provider value={currentUser}>\r\n      <Header />\r\n      <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} cards={cards} onCardLike={handleCardLike} onCardDelete={handleCardDelete} />\r\n      <Footer />\r\n      <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopups} onUpdateUser={handleUpdateUser}/>\r\n      <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopups} onAddPlace={handleAddPlace} />\r\n      <ImagePopup card={selectedCard} name=\"image\" isOpen={isImagePopupOpen} onClose={closeAllPopups} />\r\n      <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n      <PopupWithForm title=\"Вы уверены?\" name=\"delete\" isOpen={false} buttonText=\"Да\" onClose={closeAllPopups} />\r\n    </CurrentUserContext.Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render((\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>\r\n), document.querySelector('.page__content')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}